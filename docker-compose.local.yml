services:
  nzbidx:
    image: nzbidx:latest
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request,sys; sys.exit(urllib.request.urlopen('http://localhost:8080/health').getcode()!=200)",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      opensearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://nzbidx:nzbidx@postgres:5432/nzbidx
      PGDATABASE: nzbidx
      PGUSER: nzbidx
      PGPASSWORD: nzbidx
      POSTGRES_PORT: 5432
      OPENSEARCH_URL: http://opensearch:9200
      REDIS_URL: redis://redis:6379/0
      API_KEYS: dev
      SAFESEARCH: "off"
      ALLOW_XXX: "true"
      RATE_LIMIT: 60
      RATE_WINDOW: 60
      NNTP_HOST: ""
      NNTP_PORT: 119
      NNTP_USER: ""
      NNTP_PASS: ""
      NNTP_GROUPS: ""
      SEARCH_TTL_SECONDS: 60
  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: nzbidx
      POSTGRES_USER: nzbidx
      POSTGRES_PASSWORD: nzbidx
    volumes:
      - ./db/init/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:8-alpine
    volumes:
      - ${REDIS_DATA_DIR:-redis-data}:${REDIS_DATA_DIR:-/data}
    command: [
      "redis-server",
      "--dir",
      "${REDIS_DATA_DIR:-/data}",
      "--save",
      "",
      "--appendonly",
      "no",
      "--maxmemory",
      "256mb",
      "--maxmemory-policy",
      "volatile-lru"
    ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

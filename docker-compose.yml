services:
  nzbidx:
    image: nzbidx:latest
    ports:
      - "8080:8080"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request,sys; sys.exit(urllib.request.urlopen('http://localhost:8080/health').getcode()!=200)",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      opensearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PGDATABASE: nzbidx
      PGUSER: nzbidx
      PGPASSWORD: nzbidx
      POSTGRES_PORT: 15432
      OPENSEARCH_URL: http://opensearch:9200
      REDIS_URL: redis://redis:6379/0
      API_KEYS: dev
      SAFESEARCH: "off"
      ALLOW_XXX: "true"
      RATE_LIMIT: 60
      RATE_WINDOW: 60
      NNTP_HOST: ""
      NNTP_PORT: 119
      NNTP_USER: ""
      NNTP_PASS: ""
      NNTP_GROUPS: ""
      SEARCH_TTL_SECONDS: 60
  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: nzbidx
      POSTGRES_USER: nzbidx
      POSTGRES_PASSWORD: nzbidx
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:8-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
